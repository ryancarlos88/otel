version: '3'

services:
  validation:
    container_name: validation
    image: validation
    restart: always
    build:
      context: ./validation
      dockerfile: Dockerfile
    ports:
      - "8081:8081"
    depends_on:
      - data-fetch
      - otel-collector
      - zipkin-all-in-one
      - prometheus
    networks:
      - local-network

  data-fetch:
    container_name: data-fetch
    image: data-fetch
    restart: always
    build:
      context: ./data-fetch
      dockerfile: Dockerfile
    ports:
      - "8082:8082"
    depends_on:
      - otel-collector
      - zipkin-all-in-one
      - prometheus
    networks:
      - local-network

  otel-collector:
    container_name: otel-collector
    image: otel/opentelemtry-collector:latest
    restart: always
    command: ["--config=/etc/otel-collector-config.yaml"]
    volumes:
      - ./.docker/otel-collector-config.yaml:/etc/otel-collector-config.yaml
    ports:
      - "8088:8088" # Prometheus Metrics exposed by the OTel Collector
      - "8089:8089" # Prometheus exporter metrics
      - "4317:4317" # OTLP gRPC receiver
    networks:
      - local-network

  zipkin-all-in-one:
    container_name: zipkin
    image: openzipkin/zipkin:latest
    restart: always
    ports:
      - "9411:9411"
    networks:
      - local-network

  jaeger-all-in-one:
    container_name: jaegar
    image: jaegertracing/all-in-one:latest
    restart: always
    ports:
      - "16686:16686"
    networks:
      - local-network

  prometheus:
    container_name: prometheus
    image: prom/prometheus:latest
    restart: always
    ports:
      - "9090:9090"
    volumes:
      - ./.docker/prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - local-network

  grafana:
    container_name: grafana
    image: grafana/grafana:latest
    restart: always
    ports:
      - "3000:3000"
    networks:
      - local-network
    depends_on:
      - prometheus

  networks:
    local-network:
      name: local-network
      driver: bridge